'''
# 2
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
'''

def even_fib(integer):
    even_fibs = []
    fib_tracker = [1, 2]

    for _ in range(integer - 2):
        if not fib_tracker[1] % 2:
            even_fibs.append(fib_tracker[1])
        fib_tracker.append(sum(fib_tracker))
        fib_tracker.__delitem__(0)

        if fib_tracker[1] > 4000000:
            break
    print(sum(even_fibs))


# Tests

even_fib(10)
'''
>>> [2, 4, 8, 34]
'''
# Breaks at 4M
even_fib(100)
